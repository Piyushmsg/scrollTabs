[{"c:\\work_space\\pp\\test\\reactjs\\tabs\\src\\index.js":"1","c:\\work_space\\pp\\test\\reactjs\\tabs\\src\\App.js":"2","c:\\work_space\\pp\\test\\reactjs\\tabs\\src\\reportWebVitals.js":"3","c:\\work_space\\pp\\test\\reactjs\\tabs\\src\\components\\tabs\\Tabs.js":"4","c:\\work_space\\pp\\test\\reactjs\\tabs\\src\\components\\tabs\\TabsContainer.js":"5","c:\\work_space\\pp\\test\\reactjs\\tabs\\src\\components\\confirmDialogBox\\ConfirmDialogBox.js":"6"},{"size":500,"mtime":1607535106863,"results":"7","hashOfConfig":"8"},{"size":140,"mtime":1607709503716,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607535106863,"results":"10","hashOfConfig":"8"},{"size":5919,"mtime":1607756645457,"results":"11","hashOfConfig":"8"},{"size":330,"mtime":1607755528728,"results":"12","hashOfConfig":"8"},{"size":1019,"mtime":1607709385809,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"vy0drb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"c:\\work_space\\pp\\test\\reactjs\\tabs\\src\\index.js",[],["29","30"],"c:\\work_space\\pp\\test\\reactjs\\tabs\\src\\App.js",[],"c:\\work_space\\pp\\test\\reactjs\\tabs\\src\\reportWebVitals.js",[],["31","32"],"c:\\work_space\\pp\\test\\reactjs\\tabs\\src\\components\\tabs\\Tabs.js",["33","34","35"],"c:\\work_space\\pp\\test\\reactjs\\tabs\\src\\components\\tabs\\TabsContainer.js",[],"c:\\work_space\\pp\\test\\reactjs\\tabs\\src\\components\\confirmDialogBox\\ConfirmDialogBox.js",["36"],"  \r\nimport React, {useState} from 'react';\r\nimport './confirmDialogBoxStyle.css';\r\n\r\nconst ConfirmDialogBox = (props) => { \r\n    const { confirm, tabToBeDelete } = props;\r\n    const [isVisible, setIsVisible ] = useState(true);\r\n\r\n    const dialogClose = () =>{\r\n        confirm && confirm(false)\r\n        // setIsVisible(false)\r\n    }\r\n\r\n    const confirmClick = () => {\r\n        confirm && confirm(true)\r\n        // setIsVisible(false)\r\n    }\r\n\r\n    return (\r\n        <div className={`popup ${isVisible&&'isVisible'}`} role=\"alert\">\r\n        <div className=\"popupContainer\">\r\n            <p>{`Are you sure you want to delete ${tabToBeDelete.label}?`}</p>\r\n            <div className=\"buttons\">\r\n                <div className=\"dangerButton\" onClick={confirmClick}>Yes</div>\r\n                <div className=\"primaryButton\" onClick={dialogClose}>No</div>\r\n            </div>\r\n            <div className=\"popupClose\" onClick={dialogClose} />\r\n        </div> \r\n        </div> \r\n    )\r\n};\r\n\r\nexport default ConfirmDialogBox",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"37","replacedBy":"41"},{"ruleId":"39","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":22,"column":5,"nodeType":"45","endLine":22,"endColumn":14,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":96,"column":40,"nodeType":"49","messageId":"50","endLine":96,"endColumn":42},{"ruleId":"47","severity":1,"message":"51","line":129,"column":70,"nodeType":"49","messageId":"50","endLine":129,"endColumn":72},{"ruleId":"52","severity":1,"message":"53","line":7,"column":23,"nodeType":"45","messageId":"54","endLine":7,"endColumn":35},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsSliderEnable'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isSliderEnable] as a second argument to the useEffect Hook.","Identifier",["57"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-unused-vars","'setIsVisible' is assigned a value but never used.","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Add dependencies array: [isSliderEnable]",{"range":"60","text":"61"},[1102,1102],", [isSliderEnable]"]